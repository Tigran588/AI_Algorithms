# -*- coding: utf-8 -*-
"""Untitled51.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1as3UAShHu1xmQYw834AExn2szxGfr9pZ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import datasets

class Logistic_regression():

  def __init__(self,l_r = 0.01,nr_iter = 1000):
    self.l_r = l_r
    self.nr_iter = nr_iter
    self.b = None
    self.w = None

  def sigmoid(self,x):
    return 1/(1+np.exp(-x))

  def fit(self,x,y):
    nr_samples,nr_weights = x.shape
    self.w = np.zeros(nr_weights)
    self.b = 0

    for _ in range(self.nr_iter):
      pred = self.sigmoid(x @ self.w + self.b)

      self.w = self.w - 1/nr_samples*self.l_r*(x.T @ (pred - y) )
      self.b = self.b -  self.l_r*np.mean((pred - y))

  def predict(self,x):
    linear = x @ self.w + self.b
    y_linear =  self.sigmoid(linear)
    y_pred = [0 if y <=0.5 else 1 for y in y_linear]
    return y_pred

data = datasets.load_breast_cancer()
X,y = data.data,data.target

x_train,x_test,y_train,y_test = train_test_split(X,y, test_size = 0.2, random_state = 42)

log = Logistic_regression()
log.fit(x_train,y_train)
pred = log.predict(x_test)

accuracy_score(pred,y_test)