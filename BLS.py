# -*- coding: utf-8 -*-
"""Untitled46.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NQ8y_uFOuekKX01uKHi-nb934Fs7wGlL
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

iris = load_iris()
X = iris.data
y = iris.target
y[y == 2] = 0

x_train,x_test,y_train,y_test = train_test_split(X,y,test_size = 0.2,random_state = 42)

class BLS:
  def train(self,x_train,y_train):
    self.means = np.array([np.mean(x_train == i,axis = 0) for i in np.unique(y)])
    return self.means

  def dist(self,a,b):
    return np.sqrt(np.sum((a-b)**2))

  def fit(self,x_test):

    predict = []
    for i in (x_test):
      predict.append(np.argmin([self.dist(i,self.means[0]),self.dist(i,self.means[1])]))
    return np.array(predict)
a = BLS()
a.train(x_test,y_test)
pred = a.fit(x_test)
accuracy = accuracy_score(y_test, pred)
print(accuracy_score(y_test,pred))


target_names = iris.target_names

plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
for target, target_name in enumerate(target_names):
    plt.scatter(X[y == target, 0], X[y == target, 1], label=target_name)
plt.xlabel('Sepal Length (cm)')
plt.ylabel('Sepal Width (cm)')
plt.title('Sepal Length vs Sepal Width')
plt.legend()


